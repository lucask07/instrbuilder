name,ascii_str,ascii_str_get,getter,getter_type,setter,setter_type,setter_range,doc,subsystem,is_config,setter_inputs,getter_inputs
snp_port_data,CALCulate:DATA:SNP:PORTs,CALCulate:DATA:SNP:PORTs?,TRUE,double,FALSE,None,None,acquire data,memory,FALSE,,
fsim_bal_dev,CALCulate:FSIMulator:BALun:DEVice,,TRUE,int,TRUE,int,None,create a measurement,memory,FALSE,,
fsim_bal_par,CALCulate:FSIMulator:BALun:PARameter:STATe,,TRUE,int,TRUE,int,None,create a measurement,memory,FALSE,,
fsim_bal_top_bbal_port,CALCulate:FSIMulator:BALun:TOPology:BBALanced:PPORts,,TRUE,str,TRUE,str,None,create a measurement,memory,FALSE,,
fsim_bal_top_bbal_def,CALCulate:FSIMulator:BALun:TOPology:BBALanced:DEFine,,TRUE,int,TRUE,int,None,create a measurement,memory,FALSE,,
calc_par_ext,CALCulate:PARameter:DEFine:EXTended,,FALSE,None,TRUE,str,None,create a measurement,memory,FALSE,,
calc_par_sel,CALCulate:PARameter:SELect,,TRUE,str,TRUE,str,None,select a measurement,memory,FALSE,,
disp_win,DISPlay:WINDow:STATe,,TRUE,int,TRUE,int,None,select a measurement,memory,FALSE,,
disp_trace_feed,DISPlay:WINDow:TRACe1:FEED,,TRUE,str,TRUE,str,None,select a measurement,memory,FALSE,,
form_bord,FORMat:BORDer,,TRUE,str,TRUE,str,"['NORM','SWAP']",memory output format,memory,FALSE,,
form_data,FORMat:DATA,,TRUE,str,TRUE,str,"['REAL,32','REAL,64','ASCii,0']",format for transferring measurement and frequency data,format,FALSE,,
immediate,INITiate1:IMMediate,,FALSE,None,TRUE,None,None,format for transferring measurement and frequency data,format,FALSE,,
mem_form_snp,MMEMory:STORe:TRACe:FORMat:SNP,,TRUE,str,TRUE,str,"['MA','DB','RI','AUTO']",byte order for GPIB data transfer,format,FALSE,,
sens_corr,SENSe:CORRection:CSET:ACTivate,,TRUE,str,TRUE,str,None,select a measurement,memory,FALSE,,
trig_seq,TRIGger:SEQence:SOURce,,TRUE,str,TRUE,str,"['EXTernal', 'IMMediate', 'MANual']",select a measurement,memory,FALSE,,
preset,SYSTem:FPReset,,FALSE,None,FALSE,None,,system preset,system,FALSE,,
id,*IDN,,TRUE,str,FALSE,none,None,device id,status,FALSE,,
reset,*RST,,FALSE,str,TRUE,int,"[0,255]",reset device,status,FALSE,,
comm_error,*ESR,,TRUE,bit5_set,FALSE,none,None,single status bit that,status,FALSE,,
status_byte,*STB,,TRUE,int,FALSE,none,None,query the summary register (bit 6),status,FALSE,,
status_enable,*SRE,,TRUE,int,TRUE,int,"[0,255]",status register enable,status,FALSE,,
event_status,*ESR,,TRUE,int,FALSE,none,None,event status register,status,FALSE,,
event_status_enable,*ESE,,TRUE,int,TRUE,int,"[0,255]",enable bits in the event status register,status,FALSE,,
clear_status,*CLS,,FALSE,none,TRUE,int,"[0,255]",clear the even register in all register groups,status,FALSE,,
power_on_clear,*PSC,,TRUE,int,TRUE,int,"[0,255]",clear the standard event enable register,status,FALSE,,
opc,*OPC,*OPC?,TRUE,int,TRUE,int,"[0,255]",Set the operation complete bit in the standard event register,status,FALSE,,
